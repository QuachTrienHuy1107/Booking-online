{"version":3,"sources":["../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","utils/helper.ts","pages/register.tsx"],"names":["Row","Col","layout","labelCol","span","wrapperCol","formItemLayout","Register","Form","useForm","form","dispatch","useAppDispatch","useAppSelector","state","authSlice","credential","isLoading","error","history","isAuth","useHistory","isFirst","React","useRef","useEffect","current","message","Object","keys","length","push","ROUTES","LOGIN","name","initialValues","remember","onFinish","values","registerAction","justify","className","Item","label","rules","required","validateFirst","type","Password","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","style","textAlign","loading","htmlType","to"],"mappings":"mGAAA,aACeA,MAAf,G,iCCDA,aACeC,MAAf,G,iCCDA,oEAAO,IAAMC,EAAS,CAClBC,SAAU,CACNC,KAAM,IAEVC,WAAY,CACRD,KAAM,KAGDE,EAAiB,CAC1BH,SAAU,CAAEC,KAAM,IAClBC,WAAY,CACRD,KAAM,M,0LCuICG,UAzIY,WACvB,MAAeC,IAAKC,UAAbC,EAAP,oBACMC,EAAWC,cACjB,EAAiDC,aAAe,SAACC,GAAD,OAAWA,EAAMC,aAAzEC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,MACzBC,GADN,EAAsCC,OACtBC,eACVC,EAAUC,IAAMC,QAAO,GAiB7B,OAVAD,IAAME,WAAU,WACZ,IAAIH,EAAQI,QACZ,OAAMR,EAAcS,IAAQT,MAAMA,QAAlC,IACD,CAACA,IAEJK,IAAME,WAAU,WACRH,EAAQI,SAC2B,IAAnCE,OAAOC,KAAKb,GAAYc,QAAcX,EAAQY,KAAKC,IAAOC,SAC/D,CAACjB,EAAYG,IAGZ,cAAC,IAAD,yBACIT,KAAMA,GACFR,KAFR,IAGIgC,KAAK,OACLC,cAAe,CACXC,UAAU,GAEdC,SAvBS,SAACC,GACdhB,EAAQI,SAAU,EAClBf,EAAS4B,YAAeD,KAcxB,SASI,eAAC,IAAD,CAAKE,QAAQ,SAASC,UAAU,WAAhC,UACI,cAAC,IAAD,CAAKrC,KAAM,GAAIqC,UAAU,qBAAzB,SACI,cAAC,IAAKC,KAAN,2BACQpC,KADR,IAEI4B,KAAK,WACLS,MAAM,WACNC,MAAO,CACH,CACIC,UAAU,EACVlB,QAAS,gCAGjBmB,eAAa,EAVjB,SAYI,cAAC,IAAD,SAIR,cAAC,IAAD,CAAK1C,KAAM,GAAIqC,UAAU,kBAAzB,SACI,cAAC,IAAKC,KAAN,2BACQpC,KADR,IAEI4B,KAAK,QACLS,MAAM,QACNC,MAAO,CACH,CACIC,UAAU,EACVlB,QAAS,4BAEb,CACIoB,KAAM,QACNpB,QAAS,qBAGjBmB,eAAa,EAdjB,SAgBI,cAAC,IAAD,SAIR,cAAC,IAAD,CAAK1C,KAAM,GAAX,SACI,cAAC,IAAKsC,KAAN,2BACQpC,KADR,IAEI4B,KAAK,WACLS,MAAM,WACNC,MAAO,CACH,CACIC,UAAU,EACVlB,QAAS,gCAPrB,SAWI,cAAC,IAAMqB,SAAP,SAIR,cAAC,IAAD,CAAK5C,KAAM,GAAX,SACI,cAAC,IAAKsC,KAAN,2BACQpC,KADR,IAEI4B,KAAK,kBACLS,MAAM,mBACNM,aAAc,CAAC,YACfL,MAAO,CACH,CACIC,UAAU,EACVlB,QAAS,iCAEb,gBAAGuB,EAAH,EAAGA,cAAH,MAAwB,CACpBC,UADoB,SACVC,EAAGC,GACT,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OACX,IAAIC,MAAM,qDAHHF,QAAQG,cAbnC,SAsBI,cAAC,IAAMT,SAAP,SAIR,cAAC,IAAD,CAAK5C,KAAM,GAAX,SACI,cAAC,IAAKsC,KAAN,2BAAepC,KAAf,IAA+BoD,MAAO,CAAEC,UAAW,UAAnD,SACI,cAAC,IAAD,CACIC,QAAS3C,EACT8B,KAAK,UACLc,SAAS,SACTpB,UAAU,6CAJd,2BAWR,cAAC,IAAD,CAAKrC,KAAM,GAAX,SACI,eAAC,IAAKsC,KAAN,CAAWgB,MAAO,CAAEC,UAAW,UAA/B,UACI,qDACA,cAAC,IAAD,CAAMG,GAAI9B,IAAOC,MAAjB","file":"static/js/20.a8d5b322.chunk.js","sourcesContent":["import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","export const layout = {\r\n    labelCol: {\r\n        span: 24,\r\n    },\r\n    wrapperCol: {\r\n        span: 24,\r\n    },\r\n};\r\nexport const formItemLayout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: {\r\n        span: 24,\r\n    },\r\n};\r\n","import { Button, Col, Form, Input, message, Row } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { registerAction } from \"store/features/auth.slice\";\r\nimport { useAppDispatch, useAppSelector } from \"store/store\";\r\nimport { RegisterPayload } from \"types/auth.type\";\r\nimport { ROUTES } from \"utils/constant\";\r\nimport { formItemLayout, layout } from \"utils/helper\";\r\n\r\nconst Register: React.FC = () => {\r\n    const [form] = Form.useForm();\r\n    const dispatch = useAppDispatch();\r\n    const { credential, isLoading, error, isAuth } = useAppSelector((state) => state.authSlice);\r\n    const history = useHistory();\r\n    const isFirst = React.useRef(true);\r\n\r\n    const onFinish = (values: RegisterPayload) => {\r\n        isFirst.current = false;\r\n        dispatch(registerAction(values));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (isFirst.current) return;\r\n        if (!!error) return message.error(error);\r\n    }, [error]);\r\n\r\n    React.useEffect(() => {\r\n        if (isFirst.current) return;\r\n        if (Object.keys(credential).length !== 0) history.push(ROUTES.LOGIN);\r\n    }, [credential, history]);\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            {...layout}\r\n            name=\"form\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Row justify=\"center\" className=\"register\">\r\n                <Col span={24} className=\"register--username\">\r\n                    <Form.Item\r\n                        {...formItemLayout}\r\n                        name=\"username\"\r\n                        label=\"Username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please enter your username!\",\r\n                            },\r\n                        ]}\r\n                        validateFirst\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={24} className=\"register--email\">\r\n                    <Form.Item\r\n                        {...formItemLayout}\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please enter your email!\",\r\n                            },\r\n                            {\r\n                                type: \"email\",\r\n                                message: \"Email is invalid\",\r\n                            },\r\n                        ]}\r\n                        validateFirst\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={24}>\r\n                    <Form.Item\r\n                        {...formItemLayout}\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please enter your password!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={24}>\r\n                    <Form.Item\r\n                        {...formItemLayout}\r\n                        name=\"confirmPassword\"\r\n                        label=\"Confirm password\"\r\n                        dependencies={[\"password\"]}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please confirm your password!\",\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue(\"password\") === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject(\r\n                                        new Error(\"The two passwords that you entered do not match!\")\r\n                                    );\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={24}>\r\n                    <Form.Item {...formItemLayout} style={{ textAlign: \"center\" }}>\r\n                        <Button\r\n                            loading={isLoading}\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"register__btn register__btn--registerLocal\"\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={24}>\r\n                    <Form.Item style={{ textAlign: \"center\" }}>\r\n                        <span>Have an account? </span>\r\n                        <Link to={ROUTES.LOGIN}>Login now</Link>\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nexport default Register;\r\n"],"sourceRoot":""}