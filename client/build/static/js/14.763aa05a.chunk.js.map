{"version":3,"sources":["hooks/usePagination.tsx","components/movie-card.tsx","components/common/title-navigation.tsx","components/movie-recommend.tsx","components/movies.tsx","assets/images/premier.webp","pages/home.tsx"],"names":["usePagination","_page","_size","React","useState","page","size","resPagination","setPagination","handlePageChange","currentPage","MovieCard","memo","movie","isHome","className","hoverable","cover","to","pathname","ROUTES","MOVIEDETAIL","_id","alt","src","poster","title","genres","map","item","join","TitleNavigation","subTitle","linkTo","state","settings","dots","infinite","speed","slidesToShow","slidesToScroll","MovieRecommend","movieRec","dispatch","useAppDispatch","useAppSelector","movieSlice","moviePagination","isLoading","useEffect","data","getPaginateMoviesAction","movies","Tabs","TabPane","arrows","centerMode","centerPadding","rows","slidesPerRow","responsive","breakpoint","initialSlide","Movies","Row","length","Col","style","paddingRight","MOVIELIST","Home","Container","primierBanner"],"mappings":"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","file":"static/js/14.763aa05a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { PaginationRequestType } from \"types/movie.type\";\r\n\r\nexport default function usePagination(_page: number, _size: number): any {\r\n    const [resPagination, setPagination] = React.useState<PaginationRequestType>({\r\n        page: _page,\r\n        size: _size,\r\n    });\r\n\r\n    const handlePageChange = (currentPage: number) => {\r\n        setPagination({ ...resPagination, page: currentPage });\r\n    };\r\n\r\n    return { resPagination, handlePageChange };\r\n}\r\n","import { Card } from \"antd\";\r\nimport React, { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MovieResponse } from \"types/movie.type\";\r\nimport { ROUTES } from \"utils/constant\";\r\nimport \"../styles/components/_movie-card.scss\";\r\n\r\ninterface IMovieCard {\r\n    movie: MovieResponse;\r\n    isHome?: boolean;\r\n}\r\n\r\nexport const MovieCard: React.FC<IMovieCard> = memo(({ movie, isHome }): JSX.Element => {\r\n    return (\r\n        <div className={`movie ${isHome ? \"movie-recommend\" : \"\"}`} key={movie._id}>\r\n            <Card\r\n                hoverable\r\n                cover={\r\n                    <div className=\"movie__poster\">\r\n                        <Link\r\n                            to={{\r\n                                pathname: `${ROUTES.MOVIEDETAIL}/${movie._id}`,\r\n                            }}\r\n                        >\r\n                            <img className=\"movie__poster--img\" alt=\"\" src={movie.poster} />\r\n                        </Link>\r\n                    </div>\r\n                }\r\n            >\r\n                <div className=\"movie__info\">\r\n                    <Link to={{ pathname: `${ROUTES.MOVIEDETAIL}/${movie._id}` }}>\r\n                        <h1 className=\"movie__content movie__content--title\">{movie.title}</h1>\r\n                    </Link>\r\n                    <span className=\"movie__content movie__content--genres \">\r\n                        {movie.genres?.map((item: string) => item).join(\" / \")}\r\n                    </span>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/components/_title-navigation.scss\";\r\n\r\ninterface ITitleNavigation {\r\n    subTitle: string;\r\n    title: string;\r\n    linkTo: string;\r\n    state?: any;\r\n}\r\n\r\nconst TitleNavigation: React.FC<ITitleNavigation> = ({ title, subTitle, linkTo, state }) => {\r\n    return (\r\n        <div className=\"heading-title\">\r\n            <h1>{title}</h1>\r\n            {!!state ? (\r\n                <Link to={{ pathname: linkTo, state: state }}>{subTitle}</Link>\r\n            ) : (\r\n                <Link to={linkTo}>{subTitle}</Link>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default TitleNavigation;\r\n","import usePagination from \"hooks/usePagination\";\r\nimport React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { getPaginateMoviesAction } from \"store/features/movie.slice\";\r\nimport { useAppDispatch, useAppSelector } from \"store/store\";\r\nimport { MovieResponse } from \"types/movie.type\";\r\nimport { ROUTES } from \"utils/constant\";\r\nimport \"../styles/components/_movie-recommend.scss\";\r\nimport TitleNavigation from \"./common/title-navigation\";\r\nimport { MovieCard } from \"./movie-card\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { RightOutlined } from \"@ant-design/icons\";\r\n\r\nconst settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 5,\r\n    slidesToScroll: 1,\r\n};\r\n\r\ninterface IMovieRec {\r\n    isHome?: boolean;\r\n    movieRec?: MovieResponse[];\r\n}\r\n\r\nconst MovieRecommend: React.FC<IMovieRec> = ({ movieRec, isHome }) => {\r\n    const dispatch = useAppDispatch();\r\n    const { isLoading, moviePagination } = useAppSelector((state) => state.movieSlice);\r\n    const { resPagination } = usePagination(1, 10);\r\n\r\n    React.useEffect(() => {\r\n        if (!!movieRec) return;\r\n        const data = {\r\n            ...resPagination,\r\n        };\r\n        dispatch(getPaginateMoviesAction(data));\r\n    }, [dispatch, movieRec, resPagination]);\r\n\r\n    return (\r\n        <div className={`movie-rec ${!isHome ? \"movie-rec--detail\" : \"\"}`}>\r\n            <Slider {...settings}>\r\n                {moviePagination.movies?.map((movie: MovieResponse) => (\r\n                    <div key={movie._id} className={!isHome ? \"movie-rec--detail\" : \"\"}>\r\n                        <MovieCard isHome={isHome} movie={movie} />\r\n                    </div>\r\n                ))}\r\n            </Slider>\r\n\r\n            <div className={!isHome ? \"fence\" : \"fence fence--home\"}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieRecommend;\r\n","import { Tabs } from \"antd\";\r\nimport usePagination from \"hooks/usePagination\";\r\nimport React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Slider from \"react-slick\";\r\nimport { getPaginateMoviesAction } from \"store/features/movie.slice\";\r\nimport { useAppDispatch, useAppSelector } from \"store/store\";\r\nimport { MovieResponse } from \"types/movie.type\";\r\nimport { ROUTES } from \"utils/constant\";\r\nimport \"../styles/components/_movies.scss\";\r\nimport { Loading } from \"./common/loading\";\r\nimport TitleNavigation from \"./common/title-navigation\";\r\nimport { LoadingPage } from \"./loading-page\";\r\nimport { MovieCard } from \"./movie-card\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst settings = {\r\n    arrows: false,\r\n    centerMode: true,\r\n    infinite: true,\r\n    centerPadding: \"0\",\r\n    slidesToShow: 1,\r\n    speed: 400,\r\n    rows: 2,\r\n    slidesPerRow: 5,\r\n    responsive: [\r\n        {\r\n            breakpoint: 992,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                slidesPerRow: 3,\r\n                initialSlide: 3,\r\n            },\r\n        },\r\n        {\r\n            breakpoint: 756,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                slidesPerRow: 2,\r\n                initialSlide: 2,\r\n            },\r\n        },\r\n        {\r\n            breakpoint: 576,\r\n            settings: {\r\n                slidesToShow: 2,\r\n                slidesPerRow: 1,\r\n                slidesToScroll: 1,\r\n                rows: 2,\r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\nexport const Movies: React.FC = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { moviePagination, isLoading } = useAppSelector((state) => state.movieSlice);\r\n    const { resPagination } = usePagination(1, 20);\r\n\r\n    React.useEffect(() => {\r\n        const data = {\r\n            ...resPagination,\r\n        };\r\n        dispatch(getPaginateMoviesAction(data));\r\n    }, [dispatch, resPagination]);\r\n\r\n    return (\r\n        <div className=\"movies\">\r\n            <Row>\r\n                {!!isLoading && moviePagination.movies.length === 0 && <Loading />}\r\n                <Col>\r\n                    <div style={{ paddingRight: 25 }}>\r\n                        <TitleNavigation title=\"Now Showing\" linkTo={ROUTES.MOVIELIST} subTitle=\"See all\" />\r\n                    </div>\r\n\r\n                    <Slider {...settings}>\r\n                        {moviePagination.movies?.map((movie: MovieResponse) => (\r\n                            <div key={movie._id} className=\"movies__item\">\r\n                                <MovieCard movie={movie} />\r\n                            </div>\r\n                        ))}\r\n                    </Slider>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/premier.d3b5de74.webp\";","import TitleNavigation from \"components/common/title-navigation\";\r\nimport MovieRecommend from \"components/movie-recommend\";\r\nimport { Movies } from \"components/movies\";\r\nimport React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { ROUTES } from \"utils/constant\";\r\nimport \"../styles/pages/_home.scss\";\r\nimport primierBanner from \"../assets/images/premier.webp\";\r\n\r\nconst Home: React.FC = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Container>\r\n                <Movies />\r\n            </Container>\r\n\r\n            <section className=\"premier\">\r\n                <Container>\r\n                    <img src={primierBanner} alt=\"\" />\r\n                    <div className=\"heading-title--hasFence\">\r\n                        <TitleNavigation title=\"Premieres\" linkTo={ROUTES.MOVIELIST} subTitle=\"See all\" />\r\n                    </div>\r\n\r\n                    <p>Brand new releases every Friday</p>\r\n                    <MovieRecommend isHome={true} />\r\n                </Container>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;\r\n"],"sourceRoot":""}